<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yugong.auth.dao.generate.AuthorityMapper">
  <resultMap id="BaseResultMap" type="org.yugong.auth.entity.generate.Authority">
    <id column="authority_id" jdbcType="INTEGER" property="authorityId" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="authority_name" jdbcType="VARCHAR" property="authorityName" />
    <result column="authority_code" jdbcType="VARCHAR" property="authorityCode" />
    <result column="authority_content" jdbcType="VARCHAR" property="authorityContent" />
    <result column="authority_type" jdbcType="VARCHAR" property="authorityType" />
    <result column="authority_group" jdbcType="VARCHAR" property="authorityGroup" />
    <result column="authority_desc" jdbcType="VARCHAR" property="authorityDesc" />
    <result column="authority_icon" jdbcType="VARCHAR" property="authorityIcon" />
    <result column="authorization_type" jdbcType="VARCHAR" property="authorizationType" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `authority_id`, `app_id`, `authority_name`, `authority_code`, `authority_content`, 
    `authority_type`, `authority_group`, `authority_desc`, `authority_icon`, `authorization_type`, 
    `sort`, `create_time`, `update_time`
  </sql>
  <select id="selectByExample" parameterType="org.yugong.auth.entity.generate.AuthorityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `sec_authority`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `sec_authority`
    where `authority_id` = #{authorityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `sec_authority`
    where `authority_id` = #{authorityId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.yugong.auth.entity.generate.AuthorityExample">
    delete from `sec_authority`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.yugong.auth.entity.generate.Authority">
    <selectKey keyProperty="authorityId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sec_authority` (`app_id`, `authority_name`, `authority_code`, 
      `authority_content`, `authority_type`, `authority_group`, 
      `authority_desc`, `authority_icon`, `authorization_type`, 
      `sort`)
    values (#{appId,jdbcType=INTEGER}, #{authorityName,jdbcType=VARCHAR}, #{authorityCode,jdbcType=VARCHAR}, 
      #{authorityContent,jdbcType=VARCHAR}, #{authorityType,jdbcType=VARCHAR}, #{authorityGroup,jdbcType=VARCHAR}, 
      #{authorityDesc,jdbcType=VARCHAR}, #{authorityIcon,jdbcType=VARCHAR}, #{authorizationType,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.yugong.auth.entity.generate.Authority">
    <selectKey keyProperty="authorityId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sec_authority`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        `app_id`,
      </if>
      <if test="authorityName != null">
        `authority_name`,
      </if>
      <if test="authorityCode != null">
        `authority_code`,
      </if>
      <if test="authorityContent != null">
        `authority_content`,
      </if>
      <if test="authorityType != null">
        `authority_type`,
      </if>
      <if test="authorityGroup != null">
        `authority_group`,
      </if>
      <if test="authorityDesc != null">
        `authority_desc`,
      </if>
      <if test="authorityIcon != null">
        `authority_icon`,
      </if>
      <if test="authorizationType != null">
        `authorization_type`,
      </if>
      <if test="sort != null">
        `sort`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="authorityName != null">
        #{authorityName,jdbcType=VARCHAR},
      </if>
      <if test="authorityCode != null">
        #{authorityCode,jdbcType=VARCHAR},
      </if>
      <if test="authorityContent != null">
        #{authorityContent,jdbcType=VARCHAR},
      </if>
      <if test="authorityType != null">
        #{authorityType,jdbcType=VARCHAR},
      </if>
      <if test="authorityGroup != null">
        #{authorityGroup,jdbcType=VARCHAR},
      </if>
      <if test="authorityDesc != null">
        #{authorityDesc,jdbcType=VARCHAR},
      </if>
      <if test="authorityIcon != null">
        #{authorityIcon,jdbcType=VARCHAR},
      </if>
      <if test="authorizationType != null">
        #{authorizationType,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yugong.auth.entity.generate.AuthorityExample" resultType="java.lang.Long">
    select count(*) from `sec_authority`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `sec_authority`
    <set>
      <if test="record.appId != null">
        `app_id` = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.authorityName != null">
        `authority_name` = #{record.authorityName,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityCode != null">
        `authority_code` = #{record.authorityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityContent != null">
        `authority_content` = #{record.authorityContent,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityType != null">
        `authority_type` = #{record.authorityType,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityGroup != null">
        `authority_group` = #{record.authorityGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityDesc != null">
        `authority_desc` = #{record.authorityDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityIcon != null">
        `authority_icon` = #{record.authorityIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizationType != null">
        `authorization_type` = #{record.authorizationType,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        `sort` = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `sec_authority`
    set `app_id` = #{record.appId,jdbcType=INTEGER},
      `authority_name` = #{record.authorityName,jdbcType=VARCHAR},
      `authority_code` = #{record.authorityCode,jdbcType=VARCHAR},
      `authority_content` = #{record.authorityContent,jdbcType=VARCHAR},
      `authority_type` = #{record.authorityType,jdbcType=VARCHAR},
      `authority_group` = #{record.authorityGroup,jdbcType=VARCHAR},
      `authority_desc` = #{record.authorityDesc,jdbcType=VARCHAR},
      `authority_icon` = #{record.authorityIcon,jdbcType=VARCHAR},
      `authorization_type` = #{record.authorizationType,jdbcType=VARCHAR},
      `sort` = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yugong.auth.entity.generate.Authority">
    update `sec_authority`
    <set>
      <if test="appId != null">
        `app_id` = #{appId,jdbcType=INTEGER},
      </if>
      <if test="authorityName != null">
        `authority_name` = #{authorityName,jdbcType=VARCHAR},
      </if>
      <if test="authorityCode != null">
        `authority_code` = #{authorityCode,jdbcType=VARCHAR},
      </if>
      <if test="authorityContent != null">
        `authority_content` = #{authorityContent,jdbcType=VARCHAR},
      </if>
      <if test="authorityType != null">
        `authority_type` = #{authorityType,jdbcType=VARCHAR},
      </if>
      <if test="authorityGroup != null">
        `authority_group` = #{authorityGroup,jdbcType=VARCHAR},
      </if>
      <if test="authorityDesc != null">
        `authority_desc` = #{authorityDesc,jdbcType=VARCHAR},
      </if>
      <if test="authorityIcon != null">
        `authority_icon` = #{authorityIcon,jdbcType=VARCHAR},
      </if>
      <if test="authorizationType != null">
        `authorization_type` = #{authorizationType,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        `sort` = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where `authority_id` = #{authorityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yugong.auth.entity.generate.Authority">
    update `sec_authority`
    set `app_id` = #{appId,jdbcType=INTEGER},
      `authority_name` = #{authorityName,jdbcType=VARCHAR},
      `authority_code` = #{authorityCode,jdbcType=VARCHAR},
      `authority_content` = #{authorityContent,jdbcType=VARCHAR},
      `authority_type` = #{authorityType,jdbcType=VARCHAR},
      `authority_group` = #{authorityGroup,jdbcType=VARCHAR},
      `authority_desc` = #{authorityDesc,jdbcType=VARCHAR},
      `authority_icon` = #{authorityIcon,jdbcType=VARCHAR},
      `authorization_type` = #{authorizationType,jdbcType=VARCHAR},
      `sort` = #{sort,jdbcType=INTEGER}
    where `authority_id` = #{authorityId,jdbcType=INTEGER}
  </update>
</mapper>